<%
  if params["choice"] == "dosave"
    save_hash = {
      :name => params["texname"],
      :descr => params["texdescr"],
      :project_id => params["selproject"],
      :type => params["seltype"],
      :status => params["selstatus"],
      :priority => params["selpriority"]
    }
  end
  
  if params["task_id"].to_i > 0
    task = _ob.get(:Task, params["task_id"])
    title = sprintf(_("Edit task: %s."), task.name.html)
    project_id = task[:project_id]
    
    if params["choice"] == "dosave"
      task.update(save_hash)
      redirect_to("?show=task_show&task_id=#{task.id}")
    end
    
    if params["choice"] == "dodelete"
      _ob.delete(task)
      redirect_to("?show=task_search")
    end
  else
    title = _("Add new task")
    project_id = params["project_id"] if params["project_id"].to_i > 0
    
    if params["choice"] == "dosave"
      begin
        task = _ob.add(:Task, save_hash)
        redirect_to("?show=task_show&task_id=#{task.id}")
      rescue => e
        flash[:warning] = (e.message)
        redirect_to :back
      end
    end
  end
  
  if Project.all.none?
    flash[:warning] = (_("No projects has been added to this installation yet - please do that first."))
    redirect_to :back
  end
  
  
  #Generate user-projects for the select-box.
  projects_opts = {"" => _("None")}
  
  if can?(:admin, :admin)
    Project.find_each do |project|
      projects_opts[project.id] = project.name
    end
  else
    current_user.projects.each do |link|
      projects_opts[link[:project_id]] = link.project.name
    end
  end
  
  sorted = projects_opts.sort do |a, b|
    if a[0] == ""
      ret = -1
    elsif b[0] == ""
      ret = 1
    else
      ret = a[1].downcase <=> b[1].downcase
    end
    
    ret
  end
  
  projects_opts = {}
  sorted.each do |sort|
    projects_opts[sort[0]] = sort[1]
  end
  
  
  #Write page title.
  content_for(:header_title){ title }
%>

<%= simple_form_for @task do |f| %>

<%=DesignBox.boxt(_("Enter details"), 700)%>
  <table class="form">
    <%
      priority_opts = {}
      1.upto(10) do |count|
        priority_opts[count] = count
      end
    %>
    
    <%= Knj::Web.inputs([{
      :title => _("Name"),
      :name => "task[name]",
      :value => [task, :name],
      :descr => _("The name of the task as it should appear in this system.")
    },{
      :title => _("Project"),
      :name => "task[project_id]",
      :value => project_id,
      :opts => projects_opts,
      :descr => _("The project that this task belongs under.")
    },{
      :title => _("Type"),
      :name => "task[task_type]",
      :value => [task, :type],
      :descr => _("The type of the task."),
      :opts => Task.translated_task_types
    },{
      :title => _("Status"),
      :name => "task[state]",
      :value => [task, :status],
      :descr => _("The status of the task."),
      :opts => Task.translated_states
    },{
      :title => _("Priority"),
      :name => "task[priority]",
      :value => [task, :priority],
      :opts => priority_opts,
      :descr => _("10 for most important and 1 for least important.")
    },{
      :title => _("Description"),
      :name => "task[description]",
      :value => [task, :descr],
      :descr => _("The description as it should appear for the users."),
      :height => 500
    }]).html_safe %>
    <tr>
      <td colspan="2" class="buttons">
        <input type="button" value="<%=_"Insert browser and os"%>" onclick="insert_browser_and_os()" />
        <%if task%>
          <input type="button" value="<%=_("Show")%>" onclick="location.href='?show=task_show&amp;task_id=<%=task.id%>';" />
          <input type="button" value="<%=_("Delete")%>" onclick="if (confirm('<%=_("Do you want to delete this task?")%>')){location.href='?show=task_edit&amp;task_id=<%=task.id%>&amp;choice=dodelete';}" />
        <%end%>
        <input type="submit" value="<%=_("Save")%>" />
      </td>
    </tr>
  </table>
<%=DesignBox.boxb%>

<% end %>

<script type="text/javascript">
  $("#texname").focus()
  
  var browser_and_os_inserted = false
  $("#seltype").change(function(){
    if (this.value == "bug" && !browser_and_os_inserted){
      insert_browser_and_os()
    }
  })
  
  function insert_browser_and_os(){
    browser_and_os_inserted = true
    
    fck = FCKeditorAPI.GetInstance("texdescr")
    fck.InsertHtml("&nbsp;")
    fck.InsertHtml("<b><%=_'Browser'%>:</b> <%= "browser" %><br />")
    fck.InsertHtml("<b><%=_'Version'%>:</b> " + $.browser.version + "<br />")
    fck.InsertHtml("<b><%=_'Operating system'%>:</b> <%= "os" %><br />")
  }
</script>