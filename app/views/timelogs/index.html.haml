- content_for(:header_title){ Timelog.model_name.human(count: 2) }

= design_box t("enter_criteria"), 800 do
  = simple_search_form_for @ransack, @ransack_params do |f|
    = simple_fields_for :options do |f_opts|
      = f_opts.input :substract_from_each_transport_distance, required: false, input_html: {value: params[:options].try(:[], :substract_from_each_transport_distance)}

    = f.input :date_gteq, label: t("date_from"), as: :string, input_html: {value: @date_from.out(time: false)}
    = f.input :date_lteq, label: t("date_to"), as: :string, input_html: {value: @date_to.out(time: false)}
    = f.input :user_id_eq_any, as: :check_boxes, label: User.model_name.human, collection: current_user.users_with_access_to.order(:name), include_blank: true
    = f.input :task_project_id_eq_any, as: :check_boxes, label: Project.model_name.human, hint: t(".if_you_want_to_find_timelogs_from_specific_projects"), collection: current_user.visible_projects.order(:name), include_blank: true
    = f.input :comment_cont, as: :string
    = simple_fields_for Timelog.new do |t_f|
      = t_f.input :invoiced, collection: @invoiced_collection, selected: params[:timelog].try(:[], :invoiced), hint: t(".if_you_only_want_to_view_invoiced_uninvoiced_or_all_timelogs")
    = f.submit t("search")

- if @ransack_params.any?
  %br

  = design_box t(".sum"), 350 do
    %table.form
      %tbody
        %tr
          %td.tdt= t(".total_hours")
          %td
            = format_number @timelogs.sum("TIME_TO_SEC(timelogs.time)").to_f / 3600, precision: 1
            = " / "
            = format_number @timelogs.sum("TIME_TO_SEC(timelogs.time_transport)").to_f / 3600, precision: 1
        %tr
          %td.tdd{colspan: 2}
            = t(".the_total_amount_of_hours_of_all_the_found_time_logs_first_hours_used_then_time_used_on_transport")
        %tr
          %td.tdt= t(".total_transport")
          %td= format_number @timelogs.sum(:transport_length), precision: 1
        %tr
          %td.tdd{colspan: 2}
            = t(".total_length_of_transport_used_in_all_the_timelogs_found")
        - if params[:options] && params[:options][:substract_from_each_transport_distance].present?
          %tr
            %td.tdt= t(".timelogs_with_transport_length")
            %td= format_number @timelogs.with_transport_length.count, precision: 1
          %tr
            %td.tdt= t(".transport_with_substraction")
            %td= format_number @timelogs.sum(:transport_length) - (@timelogs.with_transport_length.count * params[:options][:substract_from_each_transport_distance].to_f), precision: 1

  %br

  = design_box t("results") do
    %table.form
      %thead
        %tr
          %th= Timelog.model_name.human
          %th= User.model_name.human
          %th= Timelog.human_attribute_name(:date)
          %th= Task.model_name.human
          %th= Project.model_name.human
          %th= Organization.model_name.human
          %th= Timelog.human_attribute_name(:invoiced)
          %th= "#{Timelog.human_attribute_name(:time)} / #{_("Transport")}"
          %th= Timelog.human_attribute_name(:transport_length)
      %tbody
        - @timelogs.includes(:user, task: {project: :organization}).find_each do |tlog|
          - dbt = Baza::Dbtime.new(time_as_string(tlog.time))
          - dbt_transport = Baza::Dbtime.new(time_as_string(tlog.time_transport))
          - @timelogs_sorted[tlog.task] = [] unless @timelogs_sorted.has_key?(tlog.task)
          - @timelogs_sorted[tlog.task] << tlog
          %tr
            %td= link_to_timelog tlog
            %td= link_to_user tlog.user
            %td= l(tlog.date)
            %td= link_to_task tlog.task
            %td= link_to_project tlog.task.project if tlog.task
            %td= link_to_organization tlog.task.project.organization if tlog.task
            %td= tlog.invoiced? ? t("yes") : t("no")
            %td
              = format_number dbt.hours_total, precision: 1
              = "/"
              = format_number dbt_transport.hours_total, precision: 1
            %td= format_number tlog.transport_length.to_i
        - if @timelogs.none?
          %tr
            %td.error{colspan: 1}
              = t(".no_timelogs_were_found")

  %br

  = design_box t(".organization_message") do
    %table#table_organization_message.list
      %thead
        %tr
          %th= "#{Timelog.human_attribute_name(:date)} / #{t(".hours")}"
          %th= User.model_name.human
          %th= Timelog.human_attribute_name(:description)
      %tbody
        - @timelogs_sorted.each do |task, tlogs_arr|
          %tr
            %td.tdt{colspan: 3, style: "padding-top: 10px;"}= link_to_task task

          - tlogs_arr.each do |tlog|
            - dbt = Baza::Dbtime.new(time_as_string(tlog.time))
            - dbt_transport = Baza::Dbtime.new(time_as_string(tlog.time_transport))
            %tr
              %td{colspan: 3}
                %hr{color: "#cfcfcf", size: 1}/
            %tr
              %td{style: "text-align: center;"}
                %input{name: "timelogs_#{tlog.id}", type: "hidden", value: 1}/
                = l(tlog.date)
                %br
                = format_number dbt.hours_total, precision: 2
                = "/"
                = format_number dbt_transport.hours_total, percision: 2
              %td.nowrap= link_to_user tlog.user
              %td= simple_format_default_args tlog.comment
        - unless @timelogs_sorted.empty?
          %tr
            %td{colspan: 3, style: "padding-top: 15px; text-align: right;"}
              = link_to t(".mark_timelogs_as_invoiced"), "#", class: ["button", "mark_timelogs_as_invoiced"], data: {url: mark_invoiced_timelogs_path, success_msg: _('All timelogs was marked as invoiced.'), confirm_msg: t(".are_you_sure_you_want_to_mark_all_the_found_timelogs_as_invoiced")}
